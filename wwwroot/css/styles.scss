
  // // sass --watch styles.scss:styles.css
  // https://developer.mozilla.org/en/docs/Web/CSS/box-shadow
  // box-shadow: [inset?] [top] [left] [blur] [size] [color];




Animate the size, inside
.fill:hover,
.fill:focus {
  box-shadow: inset 0 0 0 2em var(--hover);
}

// Animate the size, outside
.pulse:hover,
.pulse:focus {
  animation: pulse 1s;
  box-shadow: 0 0 0 2em rgba(#fff,0);
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 var(--hover); }
}

// Stack multiple shadows, one from the left, the other from the right
.close:hover,
.close:focus {
  box-shadow:
    inset -3.5em 0 0 0 var(--hover),
    inset 3.5em 0 0 0 var(--hover);
}

// Size can also be negative; see how it's smaller than the element
.raise:hover,
.raise:focus {
  box-shadow: 0 0.5em 0.5em -0.4em var(--hover);
  transform: translateY(-0.25em);
}

// Animating from the bottom
.up:hover,
.up:focus {
  box-shadow: inset 0 -3.25em 0 0 var(--hover);
}

// And from the left
.slide:hover,
.slide:focus {
  box-shadow: inset 6.5em 0 0 0 var(--hover);
}

// Multiple shadows, one on the outside, another on the inside
.offset {
  box-shadow:
    0.3em 0.3em 0 0 var(--color),
    inset 0.3em 0.3em 0 0 var(--color);

  &:hover,
  &:focus {
    box-shadow:
      0 0 0 0 var(--hover),
      inset 6em 3.5em 0 0 var(--hover);
  }
}

//=== Set button colors
// If you wonder why use Sass vars or CSS custom properties...
  // Make a map with the class names and matching colors
$colors: (
  fill: #a972cb,
  pulse: #ef6eae,
  close: #ff7f82,
  raise: #ffa260,
  up: #e4cb58,
  slide: #8fc866,
  offset: #19bc8b
);

// Sass variables compile to a static string; CSS variables are dynamic and inherited
  // Loop through the map and set CSS custom properties using Sass variables
@each $button, $color in $colors {
  .#{$button} {
    --color: #{$color};
    --hover: #{adjust-hue($color, 45deg)};
  }
}

// Now every button will have different colors as set above. We get to use the same structure, only changing the custom properties.
.BoxShadow {
  color: var(--color);
  transition: 0.25s;

  &:hover,
  &:focus {
    border-color: var(--hover);
    color: #fff;
  }
}

//=== Pen styling, ignore
.bodyWrapper {
  color: #fff;
  background: hsl(227, 10%, 10%);
  font: 300 1em 'Fira Sans', sans-serif;


  // Center everything ever
  justify-content: center;
  align-content: center;
  align-items: center;
  text-align: center;
  min-height: 100vh;
  display: flex;
}

// Basic button styles
.BoxShadow {
  background: none;
  border: 2px solid;
  font: inherit;
  line-height: 1;
  margin: 0.5em;
  padding: .5em 2em;
}

// h1 { font-weight: 400; }

code {
  color: #e4cb58;
  font: inherit;
}







html {
  box-sizing: border-box;
  // font-size: 100%;
}

// * {
//   box-sizing: inherit;
// }

$blue: #304ffe;

.subscribe-1 {
  position: absolute;
  left: 0; top: 100px; right: 0; bottom: 0;
  width: 25em;
  height: 4em;
  margin: auto;
  padding: 1em 0.75em;
  border: 3px solid transparent;
  // border-radius: 8px;
  overflow: hidden;
  transition: width 0.15s ease;



  &__active {
    width: 20em;
    border: 3px solid $blue;
  }

  // the box that appears after you submit response
  &__success {
    border: 3px solid #4cce95;
  }

  // text input field
  .SuccessInput {
    color: $blue;
    width: 75%;
    height: 25px;
    margin-right: 2%;
    padding-left: 0.5em;
    padding-right: 0.5em;
    font-size: 1rem;
    border: 0;
    outline: 0;
  }

  button {
    flex-grow: 1;
    border: 0;
    border-radius: 4px;
    background: darken($blue, 10%);
    color: #fff;
    cursor: pointer;
    font-size: 1em;
    transition: background 0.2s ease;

    &:hover {
      background: $blue;
    }
  }
}

.subscribe__wrapper {
  height: 100%;
  display: flex;
}

// color right when the page is loaded
.subscribe__toggle {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  background: darken($blue, 10%);
  text-align: center;
  text-decoration: none;
  color: #fff;
  font-size: 1.25em;
  line-height: 50px;
  border-radius: 0;
  transition: opacity 0.15s ease, background 0.2s ease;
  //display: none;

  &__hidden {
    opacity: 0;
    pointer-events: none;
  }

  // color when you hover the button right after it has been loaded
  &:hover {
    background: #e53935;
    color: #fff;
  }
}

// JQresponse
.subscribe__success {
  position: absolute;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  line-height: 50px;
  color: #4cce95;
  text-align: center;
  background: #fff;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.25s 0.2s ease;


  &--active {
    opacity: 1;
  }
}

